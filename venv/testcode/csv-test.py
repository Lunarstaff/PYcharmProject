'''
一维数据的格式化

数据组织的维度：从一个数据到一组数据

一维数据的表示：数据之间有序使用列表类型
ls = [1.1,2.2,3.3]

如果数据之间无序：使用集合类型
st = {1.1,2.2,3.3}

一维数据的存储：空格分隔
中 天 地 上
    -使用一个或多个空格分隔进行存储，不换行
    -缺点：数据中不能存在空格
存储方式二：使用逗号分隔
中,天,地,上
    -使用英文半角逗号分隔数据进行存储，不换行
    -缺点：数据中不能有英文逗号
存储方式三：使用其他特殊符号，需要根据数据内容选择分隔符号，通用性差

一维数据的处理：
.split() 和 .join()

二维数据的格式化和处理：
    -CSV格式数据
二数据的表示：
    -列表类型可以表达二维数据
    -使用二维列表

CSV：comma-Separated Values
    -国际通用的一二维数据存储格式，一般以.csv扩展名
    -每行一个一维数据，采用逗号分隔，无空行
    -Excel软件可以读入输出，一般编辑软件都可以产生
    -如果某个元素缺失，逗号仍要保留
    -二维数据的表头可以作为数据存储，也可以另行存储
    -逗号为英文半角逗号，逗号与数据之间无额外空格
    -一般索引习惯：ls[row][colum]，先行后列
    -根据一般习惯，外层列表每个元素是一行，按行存

二维数据的读入处理，从CSV格式
fo = open(fname)#打开文件，读
ls = []#数据空列表
for line in fo:#遍历读出
    line = line.replace("\n","")
    ls.append(lline.split(","))
fo.close()

将数据写入CSV格式文件
ls = [[],[],[]]#二维列表
f = open(fname,'w') #打开文件，写
for item in ls:
    f.write(','.join(item) + '\n') #在item元素中加入','
f.close()

采用二层循环
ls = [[],[],[]] #二维列表
for row in ls:
    for column in row:
        print(ls[row][column])
'''